version: '3'

services:
  embedding-store-server:
    image: "eu.gcr.io/microblink-identity/embedding-store/onprem:v0.31.0"
    depends_on:
      pgvector:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr", "embedding-store-server:8005"]
      interval: 15s
      timeout: 10s
      retries: 5
    command: 
      - /usr/bin/embeddingstore
      - server
      - --grpc-port
      - "8005"
      - --grpc-recv-size
      - ${GRPC_RECV_SIZE}
      - --grpc-send-size
      - ${GRPC_SEND_SIZE}
      - --grpc-timeout
      - ${GRPC_TIMEOUT}
      - --http-port
      - "8000"
      - --pgvector-backend
      - "true"
      - "--pgvector-connection-str"
      - "postgres://postgres:postgres@pgvector:5432/postgres?pool_max_conns=1000&pool_max_conn_idle_time=30s&pool_max_conn_lifetime=600s"
    networks:
      - visual-anomaly-network
    deploy:
      resources:
        limits:
          cpus: ${EMBEDDING_STORE_LIMITS_CPU}
          memory: ${EMBEDDING_STORE_LIMITS_MEM}
        reservations:
          cpus: ${EMBEDDING_STORE_RESERVATIONS_CPU}
          memory: ${EMBEDDING_STORE_RESERVATIONS_MEM}
  
  seeder:
    image: eu.gcr.io/microblink-identity/embedding-store/onprem:v0.31.0
    depends_on:
      pgvector:
        condition: service_healthy
      embedding-store-server:
        condition: service_healthy
    command:
      - /usr/bin/embeddingstore
      - seeder
      - --embedding-store-addr
      - embedding-store-server:8005
      - --embedding-store-secure
      - "false"
    volumes:
      - ${REL_DIR}/conf/embedding-store/seeder.yaml:/var/run/embedding_store.yml
    networks:
      - visual-anomaly-network

  pgvector:
    image: ankane/pgvector:v0.5.1
    healthcheck:
      test: [ 'CMD', 'pg_isready', '-q', '-U', 'postgres' ]
      interval: 15s
      retries: 5
      timeout: 10s
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command:
      - "-c"
      - "config_file=/postgresql.conf"
    volumes:
      - ${REL_DIR}/conf/embedding-store/pgconfig.conf:/postgresql.conf
      - embedding-store-data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: ${PG_VECTOR_LIMITS_CPU}
          memory: ${PG_VECTOR_LIMITS_MEM}
        reservations:
          cpus: ${PG_VECTOR_RESERVATIONS_CPU}
          memory: ${PG_VECTOR_RESERVATIONS_MEM}
    networks:
      - visual-anomaly-network

volumes:
  embedding-store-data:
  